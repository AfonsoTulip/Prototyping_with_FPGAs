|Rotary_Encoder
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => count[4]~reg0.CLK
clk => count[5]~reg0.CLK
clk => count[6]~reg0.CLK
clk => count[7]~reg0.CLK
clk => rot_en_B_delayed[0].CLK
clk => rot_en_B_delayed[1].CLK
clk => rot_en_B_delayed[2].CLK
clk => rot_en_A_delayed[0].CLK
clk => rot_en_A_delayed[1].CLK
clk => rot_en_A_delayed[2].CLK
rot_en_A => rot_en_A_delayed[0].DATAIN
rot_en_B => rot_en_B_delayed[0].DATAIN
switch_in => switch_out.DATAIN
switch_out <= switch_in.DB_MAX_OUTPUT_PORT_TYPE
direction_led <= comb.DB_MAX_OUTPUT_PORT_TYPE
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[5] <= count[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[6] <= count[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[7] <= count[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


